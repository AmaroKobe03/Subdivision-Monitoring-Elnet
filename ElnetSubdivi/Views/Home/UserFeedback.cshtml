@{
    ViewData["Title"] = "Feedback and Complaint";

}
@model IEnumerable<dynamic>

<div class="flex h-[100vh] w-[90%] flex-col items-center overflow-auto overflow-y-hidden bg-[#f2f2f2] font-semibold">
    @await Html.PartialAsync("_sharedSearch")

    <div id="sortF" class="mt-4 flex w-[88.5%] flex-row items-center gap-6">
        <a href="#" id="userfeedbackbtn" class="cursor-pointer rounded-full bg-blue-200 px-6 py-2 text-center font-semibold text-blue-700">
            <span class="text-[15px]">Feedback<span>(2)</span></span>
        </a>
        <a href="#" id="usercomplaintsbtn" class="cursor-pointer rounded-full bg-gray-100 px-6 py-2 text-center hover:bg-gray-200">
            <span class="text-[15px]">Complaints<span>(2)</span></span>
        </a>
    </div>
    <div class="mt-10 mr-2 mb-6 flex w-[88.3%] items-center justify-between">
        <!-- Search Bar -->
        <div class="relative mr-4 w-[40%]">
            <input type="text" placeholder="Search"
            class="h-12 w-full rounded-full border border-gray-300 bg-white pr-4 pl-12 outline-none focus:ring-2 focus:ring-gray-300">
            <img class="absolute top-1/2 left-4 h-5 -translate-y-1/2" src="~/Images/find.svg" alt="Search">
        </div>

        <!-- Filter Icon with Text -->
        <div id="filter" class="relative right-80 flex cursor-pointer items-center gap-2">
            <img src="~/Images/filter.svg" alt="Filter" class="h-5">
            <a id="drop" class="font-medium text-black">Filter</a>

            <div id="filterSelection" class="absolute top-full left-0 mt-2 hidden w-32 flex-col rounded-lg bg-white p-2 shadow-md">
                <a class="block px-4 py-2 hover:bg-gray-200">Newest</a>
                <a class="block px-4 py-2 hover:bg-gray-200">Oldest</a>
                <a class="block px-4 py-2 hover:bg-gray-200">Ascending</a>
                <a class="block px-4 py-2 hover:bg-gray-200">Descending</a>

            </div>

        </div>
        <script>
            document.getElementById("filter").addEventListener("click", function(){
                document.getElementById("filterSelection").classList.toggle("hidden");
            });
        </script>


        <!-- Status Icon with Text -->
        <div id="drDown" class="relative right-75 flex hidden cursor-pointer items-center gap-2">
            <a id="drop" class="font-medium text-black">All Status</a>
            <img src="~/Images/drp.svg" alt="Filter" class="h-5">

            <div id="statSelection" class="absolute top-full left-0 mt-2 hidden w-32 flex-col rounded-lg bg-white p-2 shadow-md">
                <a class="block px-4 py-2 hover:bg-gray-200">Pending</a>
                <a class="block px-4 py-2 hover:bg-gray-200">Resolved</a>
            </div>
        </div>

        <script>
            document.getElementById("drDown").addEventListener("click", function(){
                document.getElementById("statSelection").classList.toggle("hidden");
            });
        </script>


        <!-- Add Facility Button -->
        <button id="addType" class="flex items-center gap-2 rounded-full bg-[#04373A] px-6 py-2 text-white">
            <span class="text-xl">+</span>
            <span id="" class="addcomplaint cursor-pointer font-medium">New Submission</span>
        </button>
    </div>

    @{
        int indexFeedback = 0;
        int indexComplaint = 0;
    }

    <div id="userFeedback" class="flex h-[50vh] w-[88%] gap-4">
        @foreach (var item in Model)
        {
            <div class="feedback-card flex h-[24vh] w-[30%] flex-col gap-3 rounded-lg bg-white p-4 shadow-lg">
                <img class="w-50" src="~/Images/@item.Icon" />
                <h2 class="text-bold text-xl">@item.Title </h2>
                <p class="text-gray-400">@item.Type</p>
                <p class="text-sm font-semibold">@item.Description</p>
                <div class="flex items-center justify-between">
                    <span class="flex items-center gap-2 text-[14px] text-gray-400">
                        <img src="~/Images/@item.Clock" /> @item.Duration
                    </span>

                    <a id="feedback-viewdets-@indexFeedback" href="#" class="view-details text-blue-400 underline" data-index="@indexFeedback" data-type="feedback">View Details</a>
                </div>
            </div>
            indexFeedback++;
        }
    </div>

    <div id="userComplaints" class="flex hidden h-[50vh] w-[88%] gap-4">
        @foreach (var item in ViewBag.Complaints)
        {
            <div class="complaint-card flex h-[24vh] w-[30%] flex-col gap-3 rounded-lg bg-white p-4 shadow-lg">
                <button class="flex w-[110px] items-center gap-2 rounded-full px-6 py-2 font-bold text-white @(item.Status == "Pending" ? "bg-[#FBBF24]" : "bg-green-500")">
                    <span class="cursor-pointer font-semibold">@item.Status</span>
                </button>
                <h2 class="text-bold text-xl">@item.Title</h2>
                <p class="text-gray-400">@item.Type</p>
                <p class="text-sm font-semibold">@item.Description</p>
                <div class="flex items-center justify-between">
                    <span class="flex items-center gap-2 text-[14px] text-gray-400">
                        <img src="~/Images/@item.Clock" /> @item.Duration
                    </span>

                    <a id="complaint-viewdets-@indexComplaint" href="#" class="view-details text-blue-400 underline" data-index="@indexComplaint" data-type="complaint">View Details</a>
                </div>
            </div>
            indexComplaint++;
        }
    </div>

    <!-- Modal Popup -->
    
    <div id="detailsModal" class="bg-opacity-50 fixed inset-0 flex hidden items-center justify-center bg-black/50">
        <div class="flex w-[40%] flex-col gap-4 rounded-lg bg-white p-5 shadow-lg">
            <img id="modalIcon" class="w-50" src="" alt="Alternate Text" />
            <h2 id="modalTitle" class="text-xl font-bold"></h2>
            <p id="modalType" class="text-gray-500"></p>
            <p id="modalDescription" class="mt-2 text-sm"></p>
            <span id="modalDuration" class="text-xs text-gray-400"></span>
        </div>
    </div>
    <!--Script for Modal Popup -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".view-details").forEach((button) => {
                button.addEventListener("click", function (event) {
                    event.preventDefault();

                    let index = this.getAttribute("data-index");
                    let type = this.getAttribute("data-type");
                    let card = type === "feedback"
                        ? document.querySelectorAll(".feedback-card")[index]
                        : document.querySelectorAll(".complaint-card")[index];

                    // Get the details from the selected div
                    let title = card.querySelector("h2").textContent;
                    let typeText = card.querySelector("p.text-gray-400").textContent;
                    let description = card.querySelector("p.text-sm").textContent;
                    let duration = card.querySelector("span.text-gray-400").textContent;

                    // Populate modal with details
                    document.getElementById("modalTitle").textContent = title;
                    document.getElementById("modalType").textContent = typeText;
                    document.getElementById("modalDescription").textContent = description;
                    document.getElementById("modalDuration").textContent = duration;

                    // Hide the image for complaints
                    let modalImg = document.getElementById("modalIcon");
                    if (type === "feedback") {
                        let icon = card.querySelector("img").getAttribute("src");
                        modalImg.setAttribute("src", icon);
                        modalImg.style.display = "block";
                    } else {
                        modalImg.style.display = "none";
                    }

                    // Show modal
                    document.getElementById("detailsModal").classList.remove("hidden");
                });
            });

            // Close modal on click
            document.getElementById("detailsModal").addEventListener("click", function () {
                this.classList.add("hidden");
            });
        });
    </script>

    <div id="addFeedback" class="fixed inset-0 z-20 flex hidden items-center justify-center bg-black/50" >
        <div class="flex w-[500px] flex-col gap-4 rounded-2xl bg-white p-8 shadow-lg">
            <!-- Modal Header -->
            <h2 class="text-center text-2xl font-bold text-[#003D38]">Submit Feedback</h2>
            <div class="flex flex-col gap-2">
                <h2>Rating</h2>
                <img class="m-0 w-40 p-0" src="~/Images/ratings.svg" />
            </div>
            <div class="flex flex-col gap-2">
                <h2>Title</h2>
                <input type="text" name="" placeholder="Grear User Experience" class="-2 rounded-lg border border-gray-300 px-4 py-2" value="" />
            </div>
            <div class="flex flex-col gap-2">
                <h2>Description</h2>
                <textarea class="border-2 h-[15vh] w-full resize-none rounded-lg border-gray-300 px-4 py-2 text-gray-400" readonly>The interface is intuitive and easy to navigate. I particularly enjoyed the smooth transitions and responsive
                </textarea>

            </div>
            <div class="mt-6 flex gap-4">
                <button class="cancel-btn w-1/2 rounded-full border border-[#003D38] py-2 text-[#003D38]">Cancel</button>
                <button class="w-1/2 rounded-full bg-[#003D38] py-2 text-white">Submit </button>
            </div>
        </div>

    </div>

    <div id="addComplaint" class="fixed inset-0 z-20 flex hidden items-center justify-center bg-black/50">
        <div class="flex w-[500px] flex-col gap-4 rounded-2xl bg-white p-8 shadow-lg">
            <!-- Modal Header -->
            <h2 class="text-center text-2xl font-bold text-[#003D38]">Submit Complaint</h2>
            <div class="flex flex-col gap-2">
                <h2>Rating</h2>
                <img class="m-0 w-40 p-0" src="~/Images/ratings.svg" />
            </div>
            <div class="flex flex-col gap-2">
                <h2>Title</h2>
                <input type="text" name="" placeholder="Grear User Experience" class="border-2 rounded-lg border-gray-300 px-4 py-2" value="" />
            </div>
            <div class="flex flex-col gap-2">
                <h2>Description</h2>
                <textarea class="border-2 h-[15vh] w-full resize-none rounded-lg border-gray-300 px-4 py-2 text-gray-400" readonly>The interface is intuitive and easy to navigate. I particularly enjoyed the smooth transitions and responsive
                </textarea>

            </div>
            <div class="mt-6 flex gap-4">
                <button class="cancel-btn w-1/2 rounded-full border border-[#003D38] py-2 text-[#003D38]">Cancel</button>
                <button class="w-1/2 rounded-full bg-[#003D38] py-2 text-white">Submit </button>
            </div>
        </div>

    </div>
    <div id="submitType" class="fixed inset-0 z-20 flex hidden items-center justify-center bg-black/50">
        <div class="flex w-[500px] flex-col items-center gap-4 rounded-2xl bg-white p-8 shadow-lg">
            <h1 class="text-center text-2xl font-bold text-[#003D38]">Choose Submission Type</h1>
            <button id="addfeed" class="w-1/2 cursor-pointer rounded-full bg-[#003D38] py-2 text-white"> Feedback</button>
            <button id="addcomp" class="w-1/2 cursor-pointer rounded-full bg-[#003D38] py-2 text-white"> Complaint</button>

        </div>
    </div>
</div>
<script>
    // Function to close modals
    function closeModal(modalId) {
        document.getElementById(modalId).classList.add("hidden");
    }

    // Close modals when clicking outside the content
    document.getElementById("submitType").addEventListener("click", function(event) {
        if (event.target === this) closeModal("submitType");
    });
    document.getElementById("addFeedback").addEventListener("click", function(event) {
        if (event.target === this) closeModal("addFeedback");
    });
    document.getElementById("addComplaint").addEventListener("click", function(event) {
        if (event.target === this) closeModal("addComplaint");
    });

    // Open modals
    document.getElementById("addType").addEventListener("click", function() {
        document.getElementById("submitType").classList.remove("hidden");
    });
    document.getElementById("addfeed").addEventListener("click", function() {
        document.getElementById("submitType").classList.add("hidden");
        document.getElementById("addFeedback").classList.remove("hidden");
    });
    document.getElementById("addcomp").addEventListener("click", function() {
        document.getElementById("submitType").classList.add("hidden");
        document.getElementById("addComplaint").classList.remove("hidden");
    });

    // Cancel button functionality
    document.querySelectorAll(".cancel-btn").forEach(btn => {
        btn.addEventListener("click", function() {
            closeModal(this.closest(".fixed").id);
        });
    });
</script>   
<script>
    document.getElementById("usercomplaintsbtn").addEventListener("click", function (){
        document.getElementById("drDown").classList.remove("hidden")
        document.getElementById("filter").classList.add("hidden")
        document.getElementById("userComplaints").classList.remove("hidden");
        document.getElementById("userFeedback").classList.add("hidden");
    });
        document.getElementById("userfeedbackbtn").addEventListener("click", function (){
        document.getElementById("drDown").classList.add("hidden")
        document.getElementById("filter").classList.remove("hidden")
        document.getElementById("userFeedback").classList.remove("hidden");
        document.getElementById("userComplaints").classList.add("hidden");
    });

</script>
<script>
    document.querySelectorAll("#sortF a").forEach((btn) => {
        btn.addEventListener("click", (e) => {
            e.preventDefault(); // Prevent page reload

            // Reset all buttons
            document.querySelectorAll("#sortF a").forEach(b => {
                b.classList.remove("bg-blue-200", "text-blue-700", "font-semibold");
                b.classList.add("bg-gray-100", "hover:bg-gray-200");
                b.querySelector("span").classList.remove("text-blue-700");
                b.querySelector("span").classList.add("text-black");
            });

            // Add active state to the clicked button
            e.currentTarget.classList.add("bg-blue-200", "text-blue-700", "font-semibold");
            e.currentTarget.classList.remove("bg-gray-100", "hover:bg-gray-200");

            // Change the text inside span to blue
            e.currentTarget.querySelector("span").classList.remove("text-black");
            e.currentTarget.querySelector("span").classList.add("text-blue-700");
        });
    });

</script>