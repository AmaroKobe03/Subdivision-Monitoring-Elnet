@model ElnetSubdivi.Models.BillingPaymentViewModel
@{
    ViewData["Title"] = "Billing and Payment";
    var bills = Model.BillStatements;  // Directly access ViewModel property
}


<div class="flex h-[100vh] w-[90%] flex-col items-center overflow-auto overflow-y-hidden bg-[#f2f2f2] font-semibold">
    @await Html.PartialAsync("_sharedSearch")

    <div class="mt-15 mr-2 mb-6 flex w-[88%] items-center justify-between">
        <!-- Search Bar -->
        <div class="relative mr-2 w-[40%]">
            <input type="text" placeholder="Search"
                   class="h-12 w-full rounded-full border border-gray-300 bg-white pr-4 pl-12 outline-none focus:ring-2 focus:ring-gray-300">
            <img class="absolute top-1/2 left-4 h-5 -translate-y-1/2" src="~/Images/find.svg" alt="Search">
        </div>

        <!-- Status Dropdown -->
        <div class="relative right-50 inline-block">
            <select id="statusSelect" class="appearance-none rounded-full border border-gray-300 bg-white px-4 py-2 pr-8 font-medium text-black shadow-sm outline-none">
                <option value="All Status">All Status</option>
                <option value="Pending">Pending</option>
                <option value="Approved">Paid</option>
                <option value="Cancelled">Overdue</option>
            </select>
            <img src="~/Images/drp.svg" alt="Dropdown" class="pointer-events-none absolute top-1/2 right-3 h-4 -translate-y-1/2">
        </div>


        <div class="flex items-center gap-4">
            <!-- Export Report Button -->
            <button class="flex items-center gap-2 rounded-full border border-[#04373A] bg-white px-6 py-2 text-[#04373A]">
                <img src="~/Images/export.svg" alt="Export" class="h-4">
                <span class="font-medium">Export Report</span>
            </button>

            <!-- New Invoice Button -->
            <button id="openModal" class="flex items-center gap-2 rounded-full bg-[#04373A] px-6 py-2 text-white">
                <span class="text-xl">+</span>
                <span class="font-medium">New Invoice</span>
            </button>
        </div>
    </div>

    <table class="w-[88%] border-collapse bg-white text-left">
        <thead>
            <tr class="text-gray-500">
        
                    <th class="px-4 py-3">Homeowner</th>
               
                <th class="px-4 py-3">Bill Type</th>
                <th class="px-4 py-3">Billing Period</th>
                <th class="px-4 py-3">Amount Due</th>
                <th class="px-4 py-3">Due Date</th>
                <th class="px-4 py-3">Status</th>
                <th class="px-4 py-3">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bill in bills)
            {
                <tr>
                    <td class="px-4 py-3">
                        <div class="flex items-center gap-2">
                            <img src="~/Images/pfp.svg" class="h-8 w-8 rounded-full" alt="">
                            <a href="@Url.Action("PaymentHistory", "Home")" class="cursor-pointer font-medium">@bill.user_name</a>
                        </div>
                    </td>
                    <td class="flex items-center gap-2 px-4 py-3">
                        <img src="~/Images/@(bill.bill_type.ToLower()).svg" class="w-5" alt="">
                        <span>@bill.bill_type</span>
                    </td>
                    <td class="px-4 py-3">@bill.billing_period.ToString("MMMM yyyy")</td>
                    <td class="px-4 py-3">₱@bill.amount_due.ToString("N2")</td>
                    <td class="px-4 py-3">@bill.due_date.ToString("MMMM dd, yyyy")</td>
                    <td class="px-4 py-3 font-semibold @(bill.bill_status == "Paid" ? "text-green-500" : bill.bill_status == "Pending" ? "text-yellow-500" : "text-red-500")">@bill.bill_status</td>
                    <td class="cursor-pointer px-4 py-3 font-semibold text-teal-700">
                        <button class="actions-btn">⋮</button>
                        <div class="actions-menu absolute right-40 hidden w-40 bg-white shadow-md">
                            <ul>
                                <li class="cursor-pointer px-4 py-2 hover:bg-gray-100 viewdetsbtn"
                                    data-username="@bill.user_name"
                                    data-billtype="@bill.bill_type"
                                    data-billingperiod="@bill.billing_period.ToString("yyyy-MM")"
                                    data-duedate="@bill.due_date.ToString("yyyy-MM-dd")"
                                    data-amount="@bill.amount_due"
                                    data-description="@bill.description">
                                    View Details
                                </li>
                                <li class="cursor-pointer px-4 py-2 hover:bg-gray-100 editinvoicebtn"
                                    data-billno="@bill.bill_no"
                                    data-username="@bill.user_name"
                                    data-userid="@bill.user_id"
                                    data-billtype="@bill.bill_type"
                                    data-billingperiod="@bill.billing_period.ToString("yyyy-MM")"
                                    data-duedate="@bill.due_date.ToString("yyyy-MM-dd")"
                                    data-amount="@bill.amount_due"
                                    data-description="@bill.description">
                                    Edit Invoice
                                </li>

                                <li class="cursor-pointer px-4 py-2 hover:bg-gray-100">
                                    <form asp-action="MarkAsPaid" method="post" class="inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="bill_no" value="@bill.bill_no" />
                                        <button type="submit" class="w-full text-left">Mark as Paid</button>
                                    </form>
                                </li>
                                @if (bill.bill_status == "Paid")
                                {
                                    <li class="cursor-pointer px-4 py-2 hover:bg-gray-100">
                                        <a href="@Url.Action("GenerateReceipt", "Billing", new { billNo = bill.bill_no })">
                                            Generate Receipt
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="cursor-not-allowed px-4 py-2 text-gray-400">Generate Receipt</li>
                                }

                            </ul>
                        </div>
                    </td>
                </tr>
            }

        </tbody>
    </table>


    @await Html.PartialAsync("_pagination")

    <!-- invoice Modal -->
    <form asp-action="CreateInvoice" method="post" asp-antiforgery="true">
        <div id="invoiceModal" class="fixed inset-0 z-20 flex hidden items-center justify-center bg-black/50">
            <div class="w-[500px] rounded-2xl bg-white p-8" id="modalContent">
                <h2 class="mb-4 text-center text-2xl font-extrabold text-gray-800">Create New Invoice</h2>

                <!-- Homeowner -->
                <label class="mb-1 block text-base text-gray-500">Homeowner</label>
                <select name="user_id" class="border-2 w-full rounded-md border-gray-300 bg-white p-2 text-gray-500">
                    <option value="">Select Homeowner</option>
                    @foreach (var user in ViewData["Homeowners"] as List<ElnetSubdivi.Services.BillingPaymentService.UserBasicInfoDto>)
                    {
                        if (user.UserId.StartsWith("RES"))
                        {
                            <option value="@user.UserId">@user.FullName</option>
                        }
                    }
                </select>

                <!-- Bill Type -->
                <label class="mt-4 mb-1 block text-base text-gray-500">Bill Type</label>
                <select name="bill_type" class="border-2 w-full rounded-md border-gray-300 bg-white p-2 text-gray-500">
                    <option value="">Select Bill Type</option>
                    <option value="Water">Water</option>
                    <option value="Electric">Electric</option>
                    <option value="Garbage">Garbage</option>
                </select>

                <!-- Billing Period -->
                <label class="mt-4 mb-1 block text-base text-gray-500">Billing Period</label>
                <input type="month" name="billing_period" class="border-2 w-full rounded-md border-gray-300 bg-white p-2 text-gray-500" />

                <!-- Due Date -->
                <label class="mt-4 mb-1 block text-base text-gray-500">Due Date</label>
                <input type="date" name="due_date" class="border-2 w-full rounded-md border-gray-300 bg-white p-2 text-gray-500" />

                <!-- Amount Due -->
                <label class="mt-4 mb-1 block text-base text-gray-500">Amount Due (₱)</label>
                <input type="number" step="0.01" name="amount_due" class="border-2 w-full rounded-md border-gray-300 bg-white p-2 text-gray-500" />

                <!-- Notes -->
                <label class="mt-4 mb-1 block text-base text-gray-500">Notes (Optional)</label>
                <textarea name="description" class="border-2 h-[10vh] w-full rounded-md border-gray-300 bg-white p-2 text-gray-500"></textarea>

                <!-- Buttons -->
                <div class="mt-6 flex gap-4">
                    <button type="button" id="closeModal" class="w-1/2 rounded-full border border-gray-500 py-2 text-gray-500">Cancel</button>
                    <button type="submit" class="w-1/2 rounded-full bg-[#003D38] py-2 text-white">Create</button>
                </div>
            </div>
        </div>
    </form>


    <!-- details Modal -->
    <div id="detailsModal" class="fixed inset-0 z-20 flex hidden items-center justify-center bg-black/50">
        <form asp-action="EditInvoice" method="post" asp-antiforgery="true">
            <div class="w-[500px] rounded-2xl bg-white p-8" id="modalContent">
                @Html.AntiForgeryToken()
                <input type="hidden" id="details-billno" name="bill_no" />

                <!-- Homeowner -->
                <label class="mb-1 block text-base text-gray-500">Homeowner</label>
                <select id="details-username" name="user_id" class="details-input border-2 w-full rounded-md border-gray-300 bg-white p-2 text-gray-500">
                    <option></option>
                </select>

                <!-- Bill Type -->
                <label class="mt-4 mb-1 block text-base text-gray-500">Bill Type</label>
                <select id="details-billtype" name="bill_type" class="details-input border-2 w-full rounded-md border-gray-300 bg-white p-2 text-gray-500">
                    <option></option>
                </select>

                <!-- Billing Period -->
                <label class="mt-4 mb-1 block text-base text-gray-500">Billing Period</label>
                <div class="relative">
                    <input id="details-billingperiod" name="billing_period" type="month" class="details-input border-2 w-full rounded-md border-gray-300 bg-white p-2 text-gray-500" />
                </div>

                <!-- Due Date -->
                <label class="mt-4 mb-1 block text-base text-gray-500">Due Date</label>
                <div class="relative">
                    <input id="details-duedate" name="due_date" type="date" class="details-input border-2 w-full rounded-md border-gray-300 bg-white p-2 text-gray-500" />
                </div>

                <!-- Amount Due -->
                <label class="mt-4 mb-1 block text-base text-gray-500">Amount Due (₱)</label>
                <input id="details-amount" name="amount_due" type="number" step="0.01" class="details-input border-2 w-full rounded-md border-gray-300 bg-white p-2 text-gray-500" />

                <!-- Notes -->
                <label class="mt-4 mb-1 block text-base text-gray-500">Notes (Optional)</label>
                <textarea id="details-description" name="description" class="details-input border-2 h-[10vh] w-full rounded-md border-gray-300 bg-white p-2 text-gray-500"></textarea>

                <!-- Buttons -->
                <div class="mt-6 flex gap-4">
                    <button type="button" id="cancelButton" class="w-1/2 rounded-full border border-gray-500 py-2 text-gray-500">Cancel</button>
                    <button type="submit" id="updateButton" class="w-1/2 rounded-full bg-[#003D38] py-2 text-white">Update</button>
                </div>
            </div>
        </form>
    </div>


    <!-- JavaScript -->
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            document.querySelectorAll(".actions-btn").forEach(button => {
                button.addEventListener("click", (event) => {
                    event.stopPropagation();
                    let menu = button.nextElementSibling;
                    document.querySelectorAll(".actions-menu").forEach(m => {
                        if (m !== menu) m.classList.add("hidden");
                    });
                    menu.classList.toggle("hidden");
                });
            });

            document.addEventListener("click", () => {
                document.querySelectorAll(".actions-menu").forEach(menu => {
                    menu.classList.add("hidden");
                });
            });
        });


    </script>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const cancelButton = document.getElementById("cancelButton");
            const updateButton = document.getElementById("updateButton");

            document.querySelectorAll(".viewdetsbtn").forEach(button => {
                button.addEventListener("click", (event) => {
                    event.stopPropagation();
                    const modal = document.getElementById("detailsModal");

                    // Fill modal with data
                    document.getElementById("details-username").innerHTML = `<option>${button.dataset.username}</option>`;
                    document.getElementById("details-billtype").innerHTML = `<option>${button.dataset.billtype}</option>`;
                    document.getElementById("details-billingperiod").value = button.dataset.billingperiod;
                    document.getElementById("details-duedate").value = button.dataset.duedate;
                    document.getElementById("details-amount").value = button.dataset.amount;
                    document.getElementById("details-description").value = button.dataset.description;

                    // Set fields to read-only/disabled
                    document.querySelectorAll('.details-input').forEach(input => {
                        input.setAttribute("disabled", "disabled");
                    });

                    // Hide the Cancel and Update buttons
                    if (cancelButton) cancelButton.classList.add("hidden");
                    if (updateButton) updateButton.classList.add("hidden");

                    modal.classList.remove("hidden");
                });
            });

            // Close modal by clicking outside
            document.getElementById("detailsModal").addEventListener("click", (event) => {
                if (event.target === event.currentTarget) {
                    event.target.classList.add("hidden");
                }
            });
        });
    </script>


    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const openModal = document.getElementById("openModal");
            const closeModal = document.getElementById("closeModal");
            const modal = document.getElementById("invoiceModal");
            const modalContent = document.getElementById("modalContent");

            openModal.addEventListener("click", function () {
                modal.classList.remove("hidden");
            });

            closeModal.addEventListener("click", function () {
                modal.classList.add("hidden");
            });

            // Close modal when clicking outside modal content
            modal.addEventListener("click", function (event) {
                if (!modalContent.contains(event.target)) {
                    modal.classList.add("hidden");
                }
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const cancelButton = document.getElementById("cancelButton");
            const updateButton = document.getElementById("updateButton");

            document.querySelectorAll(".editinvoicebtn").forEach(button => {
                button.addEventListener("click", (event) => {
                    event.stopPropagation();
                    const modal = document.getElementById("detailsModal");

                    // Set current data
                    const usernameOption = `<option>${button.dataset.username}</option>`;
                    const currentBillType = button.dataset.billtype;

                    // Get the bill type dropdown
                    const billTypeSelect = document.getElementById("details-billtype");

                    // Clear existing options
                    billTypeSelect.innerHTML = '';

                    // Add the current bill type as first option
                    billTypeSelect.innerHTML += `<option>${currentBillType}</option>`;

                    // Define the list of default bill types
                    const defaultBillTypes = ["Water", "Electric", "Garbage"];

                    // Add options if they are NOT the current bill type (avoid duplicates)
                    defaultBillTypes.forEach(type => {
                        if (type.toLowerCase() !== currentBillType.toLowerCase()) {
                            billTypeSelect.innerHTML += `<option>${type}</option>`;
                        }
                    });

                    // Fill other data
                    document.getElementById("details-billno").value = button.dataset.billno;
                    document.getElementById("details-username").innerHTML = usernameOption;
                    document.getElementById("details-billingperiod").value = button.dataset.billingperiod;
                    document.getElementById("details-duedate").value = button.dataset.duedate;
                    document.getElementById("details-amount").value = button.dataset.amount;
                    document.getElementById("details-description").value = button.dataset.description;

                    // Show Cancel and Update buttons
                    if (cancelButton) cancelButton.classList.remove("hidden");
                    if (updateButton) updateButton.classList.remove("hidden");

                    // Enable fields
                    document.querySelectorAll('.details-input').forEach(input => {
                        input.removeAttribute("disabled");
                    });

                    modal.classList.remove("hidden");
                });
            });
        });
    </script>


</div>

