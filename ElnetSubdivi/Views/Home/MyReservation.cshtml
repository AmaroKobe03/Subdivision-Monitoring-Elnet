@model ElnetSubdivi.ViewModels.ReservationViewModel

@{
    ViewData["Title"] = "My Reservations";
    var resrvations = Model.Reservations;
    var facilities = Model.Facilities;
    var currentUser = Model.User;
}
<link href="~/css/output.css" rel="stylesheet">

@*
@{
    var facilities = new List<FacilityViewModel>
    {
        new FacilityViewModel
        {
            ImagePath = "facimg1.png",
            FacilityName = "Community Park",
            DTime = "March 15, 2025 6:00 AM - 10:00 PM",
            ActionName = "View Details",
            ButtonText = "Pending",
            ShowEditCancelButtons = true,

        },
        new FacilityViewModel
        {
            ImagePath = "facimg2.png",
            FacilityName = "Club House",
            DTime = "March 15, 2025 6:00 AM - 10:00 PM",
            ActionName = "ReserveFacility",
            ButtonText = "Completed",
            ShowEditCancelButtons = true,

        },
        new FacilityViewModel
        {
            ImagePath = "facimg3.png",
            FacilityName = "Fitness Center",
            DTime = "March 15, 2025 6:00 AM - 10:00 PM",
            ActionName = "ReserveFacility",
            ButtonText = "Approved",
            ShowEditCancelButtons = true,

        },
        new FacilityViewModel
        {
            ImagePath = "tennis.png",
            FacilityName = "Tennis Court",
            DTime = "March 15, 2025 6:00 AM - 10:00 PM",
            ActionName = "ReserveFacility",
            ButtonText = "Cancelled",
            ShowEditCancelButtons = false,

        }
    };
}
*@

<div class="flex h-[100vh] w-[90%] flex-col items-center overflow-hidden bg-[#f2f2f2] font-semibold">
    @{
        ViewData["FilterItems"] = new List<string> { "Availability", "Available", "Unavailable", "Free", "With Fee" };
    }
    @await Html.PartialAsync("_sharedSearch")

    @await Html.PartialAsync("_sortList", new List<string> { "All", "Pending", "Approved", "Completed", "Canceled" })

    <div id="reservediv" class="flex w-full flex-wrap justify-center gap-6 overflow-y-auto px-10 py-10">
        @foreach (var reservation in resrvations)
        {
            var facility = facilities.FirstOrDefault(f => f.FacilityId == reservation.FacilityId);
            if (facility != null)
            {
                // Create a new instance with status from reservation
                var facilityCopy = new ElnetSubdivi.Models.FacilityViewModel
                    {
                        FacilityId = facility.FacilityId,
                        FacilityName = facility.FacilityName,
                        FacilityCategory = facility.FacilityCategory,
                        FacilityDescription = facility.FacilityDescription,
                        FacilityStatus = reservation.ReservationStatus, // Use reservation status directly
                        FacilityAminities = facility.FacilityAminities,
                        FacilityGuidelines = facility.FacilityGuidelines,
                        ImagePath = facility.ImagePath,
                        OperatingHours = facility.OperatingHours,
                        ServiceFeePerHour = facility.ServiceFeePerHour
                    };

                @await Html.PartialAsync("_sharedFacilityCard", facilityCopy)
            }
        }
    </div>
</div>
